#!/bin/bash

# can you just reboot a linux computer? sure you could
# this does some checks giving you a hint about its usage
# returns 0 if it's safe to reboot
# returns 1-255 for the gore score you cause when rebooting

ansi_bold="\033[1m"
ansi_warn='\033[0;33m'${ansi_bold}
ansi_err='\033[0;31m'${ansi_bold}
ansi_ok='\033[0;32m'${ansi_bold}
ansi_reset="\033[0m"

f="   "
r=0

color () {
   result="$1"
   if [ "$1" -eq 0 ]; then
      result="${ansi_bold}${ansi_ok}$1${ansi_reset}"
   else
      if [ "$1" -eq 1 ]; then
        result="${ansi_bold}${ansi_warn}$1${ansi_reset}"
      else
        result="${ansi_bold}${ansi_err}$1${ansi_reset}"
      fi
   fi
}

# logged in users
echo -n "Users: "
liun=$(who |grep -v root | awk '{print $1}' |sort -u|wc -l)
color "$liun"
echo -ne "$(echo $result) "
r=$((r + liun))

# screen or tmux sessions
echo -n "screen/tmux: "
sotn=$(ps -ef |grep 'screen\|tmux' |grep -v grep | awk '{print $1 " " $NF}' |sort -u|wc -l)
color "$sotn"
echo -ne "$(echo $result) "
r=$((r + sotn))

# something is running
echo -n "CPU: "
cores=$(getconf _NPROCESSORS_ONLN)
cpu=$(uptime | sed s,.*:,,g | sed s/,//g|awk '{printf("%.0f\n",$(NF-2))}')
color "$cpu"
echo -e "$result"
r=$((r + cpu))

# exit 0 means rebootable
# the higher the return code the less reboot is recommended (1-255)
if [ $r -gt 255 ]; then r=255; fi
exit $r
