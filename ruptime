#!/bin/bash

if [ -f "$HOME"/.ruptime ]; then
    . "$HOME"/.ruptime
elif [ -f /etc/ruptime/ruptime.conf ]; then
    . /etc/ruptime/ruptime.conf
else
    echo "NO CONFIG FOUND in $HOME/.ruptime or /etc/ruptime/ruptime.conf"
    exit 1
fi

if [ -f "$HOME"/.ruptime.key ]; then
    KEY="$HOME"/.ruptime.key
elif [ -f /etc/ruptime/ruptime.key ]; then
    KEY="/etc/ruptime/ruptime.key"
else
    echo "NO KEY FOUND in $HOME/.ruptime.key or /etc/ruptime/ruptime.key"
    exit 1
fi

if [ "${SERVER}x" = "x" ]; then echo "SERVER not set"; exit 1; fi
if [ "${PORT}x" = "x" ]; then echo "PORT not set"; exit 1; fi
if [ "${HOSTNAMECMD}x" = "x" ]; then echo "HOSTNAMECMD not set"; exit 1; fi

d=$(basename "$0")
if [ "${1}x" = "-vx" ]; then
    cat << INFO
[0m[91m▗[0m[91m▆[0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[91m▆[0m[91m▖[0m[7m[91m▏[0m[7m[91m [0m[91m▌[0m[7m[91m [0m[7m[91m [0m[91m▍[0m [0m [0m[7m[91m▊[0m[7m[91m [0m[7m[91m [0m[91m▏[0m[91m▄[0m[7m[91m⎺[0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m⎺[0m[91m▄[0m[7m[91m▉[0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m┃[0m[7m[91m [0m[7m[91m [0m[91m▏[0m[91m▗[0m[91m▆[0m[7m[91m⎺[0m[7m[91m [0m[7m[91m [0m[91m▆[0m[91m▄[0m[91m▆[0m[7m[91m⎺[0m[7m[91m [0m[7m[91m [0m[91m▆[0m[91m▃[0m [0m[31m▗[0m[91m▅[0m[7m[91m⎺[0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m⎺[0m[91m▅[0m[7m[91m▉[0m[7m[91m [0m[7m[91m [0m[7m[91m┃[0m[7m[91m [0m[7m[91m [0m
[0m[7m[91m [0m[7m[91m [0m[91m▍[0m [0m[91m▂[0m[91m▃[0m[91m▃[0m[91m▃[0m[91m▃[0m[31m[101m▏[0m[7m[91m [0m[91m▋[0m[7m[91m▃[0m[7m[91m▃[0m[91m▘[0m[7m[91m [0m[7m[91m [0m[91m▍[0m [0m [0m[7m[91m▊[0m[7m[91m [0m[7m[91m [0m[7m[91m▋[0m[7m[91m [0m[7m[91m [0m[91m⎺[0m [0m [0m [0m [0m [0m[7m[91m▉[0m[7m[91m [0m[7m[91m [0m[91m▎[0m [0m [0m[7m[91m▉[0m[7m[91m [0m[7m[91m [0m[91m▎[0m [0m [0m[7m[91m▊[0m[7m[91m [0m[7m[91m [0m[7m[91m▊[0m[7m[91m [0m[7m[91m [0m[7m[91m▅[0m[91m⎺[0m[7m[91m▆[0m[7m[91m▖[0m[7m[91m [0m[7m[91m [0m[7m[91m▆[0m[91m⎺[0m[7m[91m▆[0m[31m[101m▏[0m[7m[91m [0m[91m▌[0m[7m[91m▎[0m[7m[91m [0m[7m[91m▗[0m[91m▗[0m[91m▄[0m[91m▄[0m[91m▄[0m[91m▄[0m[91m▄[0m[91m▄[0m[7m[91m [0m[7m[91m [0m[91m▎[0m[7m[91m▃[0m[7m[91m▃[0m[91m▝[0m[7m[91m▃[0m[7m[91m▃[0m
[0m[7m[91m [0m[7m[91m [0m[91m▍[0m[31m[101m⎺[0m[7m[91m [0m[7m[91m▃[0m[7m[91m▃[0m[7m[91m▃[0m[7m[91m▃[0m[7m[91m▃[0m[7m[91m▅[0m [0m [0m [0m [0m[7m[91m▏[0m[7m[91m [0m[7m[91m▝[0m [0m [0m[7m[91m▋[0m[7m[91m [0m[7m[91m [0m[7m[91m▋[0m[7m[91m [0m[7m[91m [0m[7m[91m▌[0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m⎽[0m[7m[91m▄[0m [0m [0m [0m[7m[91m▉[0m[7m[91m [0m[7m[91m [0m[91m▎[0m [0m [0m[7m[91m▊[0m[7m[91m [0m[7m[91m [0m[7m[91m▋[0m[7m[91m [0m[7m[91m [0m [0m [0m [0m[7m[91m▌[0m[7m[91m [0m[91m▊[0m [0m [0m [0m[7m[91m▎[0m[7m[91m [0m[91m▋[0m[7m[91m▎[0m[7m[91m [0m[7m[91m▝[0m[91m▝[0m[7m[91m▄[0m[7m[91m▄[0m[7m[91m▄[0m[7m[91m▄[0m[7m[91m▄[0m[7m[91m▄[0m[7m[91m▅[0m[31m⎺[0m [0m [0m [0m [0m [0m [0m
[0m[7m[91m [0m[7m[91m [0m[91m▍[0m[7m[91m▃[0m[7m[91m⎽[0m[7m[91m⎺[0m[7m[91m⎺[0m[7m[91m⎺[0m[7m[91m⎺[0m[7m[91m⎺[0m[7m[91m⎺[0m[91m▋[0m [0m [0m [0m [0m[7m[91m▃[0m[7m[91m⎽[0m[7m[91m [0m[7m[91m [0m[7m[91m⎽[0m[7m[91m▃[0m[31m▘[0m[7m[91m▋[0m[7m[91m [0m[7m[91m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m [0m[7m[91m▉[0m[7m[91m [0m[7m[91m [0m[91m▎[0m [0m [0m[7m[91m▊[0m[7m[91m [0m[7m[91m [0m[7m[91m▋[0m[7m[91m [0m[7m[91m [0m [0m [0m [0m[7m[91m▌[0m[7m[91m [0m[91m▊[0m [0m [0m [0m[7m[91m▎[0m[7m[91m [0m[91m▋[0m[31m▝[0m[7m[91m▃[0m[7m[91m⎽[0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[7m[91m [0m[91m▍[0m [0m [0m [0m [0m [0m
THIS IS THE UNLICENSED VERSION. PLEASE BUY. US@WEDONTHAVEAPRIVACYPROBLEM.COM
VERSION 1.1 (FREE PLAN)
INFO
    exit 0
fi
if [ "${1}x" = "-ix" ]; then
    # install the software and symlinks
    if [ 0 -eq `id -u` ]; then
	cp ruptime /usr/bin
	mkdir -p /etc/ruptime
	cp etc/ruptime.conf etc/ruptime.key /etc/ruptime/
	mkdir -p /usr/lib/ruptime
	cp ext/* /usr/lib/ruptime
	cp etc/cron.d/ruptime /etc/cron.d/ruptime
	cd /usr/bin && (
	    ln -sf ruptime rsw
	    ln -sf ruptime rhw
	    ln -sf ruptime runame
	    ln -sf ruptime rbench
	    ln -sf ruptime rboot
	    ln -sf ruptime rdisk
	    ln -sf ruptime rload
	    ln -sf ruptime rnet
	)
	exit 0
    else
	echo "MUST BE ROOT."
	exit 1
    fi
fi
if [ "${1}x" = "-ux" ]; then
    k=$(eval "$HOSTNAMECMD")
    case "$d" in
	runame)
	    case "$(uname -s)" in
		Linux)
		    s=$(echo $(lsb_release -a 2>/dev/null | grep -v ^LSB | grep -v ^Desc | awk '{print $NF}'))
		;;
		Darwin)
		    s=$(echo $(sw_vers 2>/dev/null | awk '{print $NF}'))
		;;
	    esac
	    u=$(printf "%-28s %s, %s\n" "$k" "`uname -srm`" "$s" | mcrypt -f "$KEY" -Fq | base64 -w0)
	;;
	ruptime)
	    u=$(uptime|sed 's/ days\{0,1\},[[:blank:]]\{1,\}/+/; s/ averages\{0,1\}://; s/ min//;s/,//g'|awk -v h=$(eval "$HOSTNAMECMD") '{$1="";printf "%-28s %s %11s %2s %5s %s %6s %6s %6s\n", h, $2, $3, $4, $5, $6, $7, $8, $9}' | mcrypt -f "$KEY" -Fq | base64 -w0)
	;;
	rsw)
rsw=$(for a in dpkg rpm nix snap spack flatpak pip2 pip3 brew zypper; do
    which $a &>/dev/null && (
	case $a in
	  dpkg) num=`dpkg -l |grep ^ii |wc -l`;;
	  rpm) num=`rpm -qa | wc -l`;;
          brew) num=`brew list| wc -l`;;
	  pip2) num=`pip2 list 2>/dev/null | wc -l`;;
	  pip3) num=`pip3 list 2>/dev/null | wc -l`;;
	  spack) num=`spack find 2>/dev/null |wc -l`;;
	  snap) num=`snap list |sed 1d |wc -l`;;
	  flatpak) num=`flatpak list | wc -l`;;
	  zypper) num=`zypper search --installed-only | grep package$ | wc -l`;;
	  *) num="n/a";;
	esac
	echo -ne "$a $(echo $num) "
    ) #|| echo "$a not found..."
done)
	    u=$(printf "%-28s %s\n" "$k" "$rsw" | mcrypt -f "$KEY" -Fq | base64 -w0)
	;;
	rhw)
	    echo "NOT IMPLEMENTED YET"; exit 1
	;;
	rbench)
	    u=$(printf "%-28s %s\n" "$k" "`/usr/lib/ruptime/benchmark`" | mcrypt -f "$KEY" -Fq | base64 -w0)
	;;
	rboot)
	    u=$(printf "%-28s %s\n" "$k" "`/usr/lib/ruptime/chkreboot`" | mcrypt -f "$KEY" -Fq | base64 -w0)
	;;
	rnet)
	    s=$(ifconfig |grep -v "^ " |grep -v ^$ |grep -v "^lo"|sed "s,:.*,," |while read a; do echo -n "$a "; ethtool $a 2>/dev/null |grep -i speed; done |sed "s,.peed:,,"|grep -v Unknown)
	    u=$(printf "%-28s %s\n" "$k" "$s" | mcrypt -f "$KEY" -Fq | base64 -w0)
	;;
	rdisk)
	    echo "NOT IMPLEMENTED YET"; exit 1
	;;
	rload)
	    s=$(uptime | sed "s/,//g" | awk -v c=$(getconf _NPROCESSORS_ONLN) '{printf "%6.2f\n", $(NF-2)*100/c}')
	    case "$(uname -s)" in
		Linux)
		    gpu=$(which nvidia-smi >/dev/null && printf "%6.2f %6.2f\n" $(nvidia-smi --query-gpu=utilization.gpu,utilization.memory --format=csv |sed 1d|sed "s/%,//g;s/MiB//g;s/,//g;s/  / /g" |datamash -t" " median 1-2 2>/dev/null))
		    m=$(printf "%6.2f\n" $(free -m -t |tail -1 |awk '{print 100*$3/$2}'))
		;;
		Darwin)
		    total=$(sysctl hw.memsize | awk '{print $NF}')
		    used=$(top -l 1 | grep PhysMem: |sed "s/M//g"|awk '{print $2*1024*1024}')
		    m=$(printf "%6.2f\n" $(echo Mem: $total $used |awk '{print 100*$3/$2}'))
		;;
	    esac
	    u=$(printf "%-28s %s %s %s %s\n" "$k" "$s" "$m" "$gpu" | mcrypt -f "$KEY" -Fq | base64 -w0)
	;;
	*)
	    echo "PROTOCOL ERROR"
	    exit 1
	;;
    esac
    echo "$d $u" | nc "$SERVER" "$PORT"
    exit 0
fi

d=$(basename "$0")
(echo xz."$d") |
(nc -n "$SERVER" "$PORT") |
(base64 -d | mcrypt -d -f "$KEY" -Fq | xz -d 2>/dev/null  || echo "NO DATA FOUND ($?)" 1>&2)
